{"version":3,"sources":["Redux/Task/ActionType.js","Redux/Task/TaskReducer.js","Redux/User/ActionType.js","Redux/User/UserReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/User/UserAction.js","Component/Alert.js","Component/LogIn.js","Component/SignUp.js","Component/Profile.js","Redux/Task/TaskAction.js","Component/Task.js","Component/PrivateRoute.js","Component/Main.js","App.js","index.js"],"names":["TASK_FETCH_REQUEST","TASK_FETCH_SUCCESS","TASK_FETCH_ERROR","TASK_LOG_OUT","SET_TASK_ALERT","REMOVE_TASK_ALERT","TASK_ALL_DELETE_SUCCESS","initialState","taskList","taskAlert","loadding","TaskReducer","state","action","type","payload","USER_FETCH_REQUEST","USER_FETCH_SUCCESS","USER_FETCH_ERROR","USER_LOG_OUT","USER_UPDATE_SUCCESS","SET_ALERT","REMOVE_ALERT","user","isLogin","userAlert","UserReducer","rootReducer","combineReducers","User","Task","store","createStore","composeWithDevTools","applyMiddleware","thunk","BASE_URL","fetchRequest","fetchSuccess","data","fetchError","error","setAlert","removeAlert","updateUser","oldUser","newUser","confirmPassword","dispatch","password","message","setTimeout","Axios","post","id","old_email","email","old_username","username","then","res","updateSuccess","catch","msg","response","logoutUser","localStorage","setItem","Alert","alert","className","role","LogIn","useSelector","useState","setUsername","setPassword","useDispatch","to","onsubmit","event","preventDefault","JSON","stringify","onSubmit","e","placeholder","value","onChange","target","required","autoComplete","SignUp","setEmail","setconfirmPassword","first_name","setFirstName","last_name","setLastName","signUpUser","Profile","changePassword","setChangePassword","useEffect","disabled","onClick","fetchTaskData","editTask","taskid","task","status","logoutTask","deleteAllTask","deleteAllSuccess","TaskList","taskEdit","taskDelete","changeStatus","completed","title","getDate","date","Date","toLocaleString","weekday","year","month","day","activeItem","setActiveItem","deleteTask","newTask","clearActiveItem","createTask","onchange","maxLength","length","map","item","index","PrivateRoute","Component","path","rest","render","Main","getItem","parse","getUserDetail","exact","component","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.148a8cb7.chunk.js","sourcesContent":["export const TASK_FETCH_REQUEST = 'TASK_FETCH_REQUEST'\r\nexport const TASK_FETCH_SUCCESS = 'TASK_FETCH_SUCCESS'\r\nexport const TASK_FETCH_ERROR = 'TASK_FETCH_ERROR'\r\nexport const TASK_LOG_OUT = 'TASK_LOG_OUT'\r\nexport const SET_TASK_ALERT = 'SET_TASK_ALERT'\r\nexport const REMOVE_TASK_ALERT = 'REMOVE_TASK_ALERT'\r\nexport const TASK_ALL_DELETE_SUCCESS = 'TASK_ALL_DELETE_SUCCESS'\r\n","import  { TASK_FETCH_REQUEST, TASK_FETCH_ERROR, TASK_FETCH_SUCCESS, TASK_LOG_OUT, SET_TASK_ALERT, REMOVE_TASK_ALERT, TASK_ALL_DELETE_SUCCESS } from './ActionType'\r\n\r\nconst initialState = {\r\n    taskList: [],\r\n    taskAlert: null,\r\n    loadding: false\r\n}\r\n\r\nconst TaskReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n\r\n    switch(type) {\r\n        case TASK_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case TASK_FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                taskList: payload,\r\n                loadding: false,\r\n            }\r\n        case TASK_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                taskList: [],\r\n                loadding: false,\r\n            }\r\n        case TASK_LOG_OUT:\r\n            return {\r\n                ...initialState\r\n            }\r\n        case SET_TASK_ALERT:\r\n            return {\r\n                ...state,\r\n                taskAlert: payload\r\n            }\r\n        case REMOVE_TASK_ALERT:\r\n            return {\r\n                ...state,\r\n                taskAlert: null\r\n            }\r\n        case TASK_ALL_DELETE_SUCCESS:\r\n            return initialState\r\n        default: \r\n            return state\r\n    }\r\n} \r\n\r\nexport default TaskReducer","export const USER_FETCH_REQUEST = 'USER_FETCH_REQUEST'\r\nexport const USER_FETCH_SUCCESS = 'USER_FETCH_SUCCESS'\r\nexport const USER_FETCH_ERROR = 'USER_FETCH_ERROR'\r\nexport const USER_LOG_OUT = 'USER_LOG_OUT'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const SET_ALERT = 'SET_ALERT'\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'","import  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, USER_LOG_OUT, USER_UPDATE_SUCCESS, SET_ALERT, REMOVE_ALERT } from './ActionType'\r\n\r\nconst initialState = {\r\n    user:{},\r\n    isLogin:false,\r\n    loadding: false,\r\n    userAlert: null\r\n}\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    const {type, payload} = action\r\n    switch(type) {\r\n        case USER_FETCH_REQUEST:\r\n            return {\r\n                ...state,\r\n                loadding: true,\r\n            }\r\n        case USER_FETCH_SUCCESS:\r\n        case USER_UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload,\r\n                loadding: false,\r\n                isLogin: true\r\n            }\r\n        case USER_FETCH_ERROR:\r\n            return {\r\n                ...state,\r\n                user:{},\r\n                loadding: false,\r\n                isLogin: false\r\n            }\r\n        case SET_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: payload\r\n            }\r\n        case REMOVE_ALERT:\r\n            return {\r\n                ...state,\r\n                userAlert: null\r\n            }\r\n        case USER_LOG_OUT:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n             return state\r\n    }\r\n} \r\n\r\nexport default UserReducer","import { combineReducers } from 'redux'\r\nimport TaskReducer from './Task/TaskReducer'\r\n\r\nimport UserReducer from './User/UserReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    User: UserReducer,\r\n    Task: TaskReducer\r\n})\r\n\r\nexport default rootReducer","import {applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","import Axios from 'axios'\r\nimport  { USER_FETCH_REQUEST, USER_FETCH_ERROR, USER_FETCH_SUCCESS, USER_LOG_OUT, USER_UPDATE_SUCCESS, SET_ALERT, REMOVE_ALERT } from './ActionType'\r\n\r\nconst BASE_URL = \"https://dhaval-todo-app.herokuapp.com\"\r\n\r\nexport const fetchRequest = () => {\r\n    return {\r\n        type: USER_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const fetchSuccess = (data) => {\r\n    return {\r\n        type: USER_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchError = (error) => {\r\n    return {\r\n        type: USER_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const updateSuccess = (data) => {\r\n    return {\r\n        type: USER_UPDATE_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const setAlert = (data) => {\r\n    return {\r\n        type: SET_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeAlert = (data) => {\r\n    return {\r\n        type: REMOVE_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: USER_LOG_OUT,\r\n        payload: null\r\n    }\r\n}\r\n\r\n\r\nexport const signUpUser = (user, confirmPassword) => {\r\n    return dispatch => {\r\n        if(user.password !== confirmPassword) {\r\n            dispatch(setAlert({type:'danger', message: \"Password and Confirm Password does not match\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            dispatch(fetchRequest())\r\n            Axios.post(`${BASE_URL}/api/user-create/`, {...user})\r\n            .then(res =>  {\r\n                const data = res.data\r\n                dispatch(fetchSuccess(data))\r\n                localStorage.setItem('todo-user', JSON.stringify({id: data.id, username:data.username, email: data.email}))\r\n                dispatch(setAlert({type:'success', message: `Welcome ${data.username}!  Thank You For The Registration :)`}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n            .catch(error => {\r\n                const msg = error.response.data.message\r\n                dispatch(fetchError())\r\n                dispatch(setAlert({type:'danger', message: msg}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const loginUser = (user) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest())\r\n        Axios.post(`${BASE_URL}/api/user-login/`, {...user})\r\n        .then(res =>  {\r\n            const data = res.data\r\n            dispatch(fetchSuccess(data))\r\n            localStorage.setItem('todo-user', JSON.stringify({id: data.id, username:data.username, email: data.email}))\r\n            \r\n            dispatch(setAlert({type:'success', message: `Welcome ${data.username}!  We Are Happy To See You Again :)`}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n        .catch(error => {\r\n            const msg = error.response.data.message\r\n            dispatch(fetchError())\r\n            dispatch(setAlert({type:'danger', message: msg}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetail = (user) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest())\r\n        Axios.post(`${BASE_URL}/api/user-detail/`, {...user})\r\n        .then(res =>  {\r\n            const data = res.data\r\n            dispatch(fetchSuccess(data))\r\n        })\r\n        .catch(error => {\r\n            const msg = error.response.data.message\r\n            dispatch(fetchError())\r\n            dispatch(setAlert({type:'danger', message: msg}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (oldUser, newUser, confirmPassword) => {\r\n    return dispatch => {\r\n        if(newUser.password !== confirmPassword) {\r\n            dispatch(setAlert({type:'danger', message: \"Password and Confirm Password does not match\"}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        } else {\r\n            Axios.post(`${BASE_URL}/api/user-update/`, { id: oldUser.id, old_email: oldUser.email, old_username: oldUser.username, ...newUser})\r\n            .then(res =>  {\r\n                const data = res.data\r\n                dispatch(updateSuccess(data))\r\n                dispatch(setAlert({type:'success', message: 'Profile Updated Successfully'}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n            .catch(error => {\r\n                const msg = error.response.data.message\r\n                dispatch(setAlert({type:'danger', message: msg}))\r\n                setTimeout(() => dispatch(removeAlert()), 3000);\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const logoutUser = (username) => {\r\n    return dispatch => {\r\n        localStorage.setItem('todo-user', '')\r\n        dispatch(logout())\r\n        dispatch(setAlert({type:'primary', message: `By ${username}!  See You Again :)`}))\r\n        setTimeout(() => dispatch(removeAlert()), 3000);\r\n    }\r\n}\r\n\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Alert = ({alert}) => {\r\n    return <Fragment>\r\n        <div className={`alert alert-${alert.type} alert-dismissible fade show mt-3`} role=\"alert\">\r\n            <strong>{alert.message} !</strong>\r\n        </div>\r\n    </Fragment> \r\n}\r\n\r\nexport default Alert","import React, { Fragment, useState } from 'react'\r\nimport '../App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../Redux/User/UserAction';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Alert from './Alert';\r\n\r\nconst LogIn = () => {\r\n    const {isLogin, userAlert} = useSelector(state => state.User)\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    if (isLogin) \r\n        return <Redirect to=\"/\" />\r\n    \r\n        const onsubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(loginUser({username, password}))\r\n    }\r\n    return <Fragment>\r\n        <div className=\"container w-80\">\r\n            {userAlert && <Alert alert={userAlert}/>}\r\n            <div id=\"task-container\">\r\n                <h1 className=\"text-center pt-3 cart-title\">Sign-In</h1>\r\n                <form id=\"form\" className=\"m-4 p-4\" onSubmit={e=> onsubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username or Email Address</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\"   \r\n                             placeholder=\"Enter Username or Email Address\"\r\n                            value={username}\r\n                            onChange={e => setUsername(e.target.value)}  required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Enter Password\" \r\n                            autoComplete=\"false\"\r\n                            value={password}  \r\n                            onChange={e => setPassword(e.target.value)} required/>\r\n                    </div>\r\n                    <p className=\"text-center\" ><Link to=\"/signup\" >Don't Have Account</Link></p>\r\n                    <div className=\"col-md-12 text-center \">\r\n                        <button type=\"submit\" className=\"btn btn-block btn-primary \">Sign-In</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default LogIn","import React, { Fragment, useState } from 'react'\r\nimport '../App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUpUser } from '../Redux/User/UserAction';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Alert from './Alert';\r\n\r\nconst SignUp = () => {\r\n    const {isLogin, userAlert} = useSelector(state => state.User)\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setconfirmPassword] = useState('')\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    if (isLogin) \r\n        return <Redirect to=\"/\" />\r\n\r\n    const onsubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(signUpUser({username, password, email, first_name, last_name}, confirmPassword))\r\n    }\r\n    return <Fragment>\r\n        <div className=\"container w-md-50\">\r\n            {userAlert && <Alert alert={userAlert}/>}\r\n            <div id=\"task-container\">\r\n                <h1 className=\"text-center pt-3 cart-title\">Sign-Up</h1>\r\n                <form id=\"form\" className=\"mx-4 px-4 py-3\"  onSubmit={e=> onsubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <label>User Name</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\"   \r\n                            placeholder=\"User Name\"\r\n                            value={username}\r\n                            onChange={e => setUsername(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>First Name</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\"   \r\n                                placeholder=\"First Name\"\r\n                                value={first_name}\r\n                                onChange={e => setFirstName(e.target.value)} />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Last Name</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\"   \r\n                                placeholder=\"Last Name\"\r\n                                value={last_name}\r\n                                onChange={e => setLastName(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\"   \r\n                            placeholder=\"Example ! temp@temp.com...\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Password</label>\r\n                            <input type=\"password\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter Password\" \r\n                                autoComplete=\"false\"\r\n                                value={password}  \r\n                                onChange={e => setPassword(e.target.value)}/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Confirm-Password</label>\r\n                            <input type=\"password\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Confirm Password\" \r\n                                autoComplete=\"false\"\r\n                                value={confirmPassword}  \r\n                                onChange={e => setconfirmPassword(e.target.value)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6 text-center \">\r\n                            <button type=\"submit\" className=\"btn btn-block btn-primary \">Sign-Up</button>\r\n                        </div>\r\n                        <div className = \"form-group col-md-6\">\r\n                            <Link to=\"/\" className=\"btn btn-block btn-info \">Sign-In</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default SignUp","import React, { Fragment, useEffect, useState } from 'react'\r\nimport '../App.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateUser } from '../Redux/User/UserAction';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Alert from './Alert';\r\n\r\nconst Profile = () => {\r\n    const {isLogin, user, error, userAlert} = useSelector(state => state.User)\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setconfirmPassword] = useState('')\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const [changePassword, setChangePassword] = useState(false)\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        if(isLogin) {\r\n            const {username, email, password, first_name, last_name} = user\r\n            setUsername(username)\r\n            setEmail(email)\r\n            setFirstName(first_name)\r\n            setLastName(last_name)\r\n            setPassword(password)\r\n            setconfirmPassword(password)\r\n        }\r\n    }, [isLogin, user])\r\n\r\n    if (!isLogin) \r\n        return <Redirect to=\"/login\" />\r\n    \r\n    const onsubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(updateUser(user, {username, password, email, first_name, last_name}, confirmPassword))\r\n    }\r\n    return <Fragment>\r\n        <div className=\"container w-md-50\">\r\n            {userAlert && <Alert alert={userAlert}/>}\r\n            <div id=\"task-container\">\r\n                <h1 className=\"text-center pt-3 cart-title\">My Profile</h1>\r\n                <form id=\"form\" className=\"mx-4 px-4 py-3\"  onSubmit={e=> onsubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <label>User Name</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\"   \r\n                            placeholder=\"User Name\"\r\n                            value={username}\r\n                            onChange={e => setUsername(e.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>First Name</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\"   \r\n                                placeholder=\"First Name\"\r\n                                value={first_name}\r\n                                onChange={e => setFirstName(e.target.value)} required/>\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label>Last Name</label>\r\n                            <input type=\"text\" \r\n                                className=\"form-control\"   \r\n                                placeholder=\"Last Name\"\r\n                                value={last_name}\r\n                                onChange={e => setLastName(e.target.value)} required/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"text\" \r\n                            className=\"form-control\"   \r\n                            placeholder=\"Example ! temp@temp.com...\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)} required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Enter Password\" \r\n                            autoComplete=\"false\"\r\n                            value={password}  \r\n                            onChange={e => setPassword(e.target.value)} \r\n                            disabled={!changePassword} required/>\r\n                    </div>\r\n                    \r\n                    {changePassword \r\n                    ? (<div className=\"form-group \">\r\n                        <label>Confirm-Password</label>\r\n                        <input type=\"password\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Confirm Password\" \r\n                            autoComplete=\"false\"\r\n                            value={confirmPassword}  \r\n                            onChange={e => setconfirmPassword(e.target.value)} required/>\r\n                    </div>)\r\n                    : <button className=\"btn text-center\" onClick = {() => setChangePassword(!changePassword)}>Click Here To Change Password</button>}\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6 text-center \">\r\n                            <button type=\"submit\" className=\"btn btn-block btn-warning \">Update Profile</button>\r\n                        </div>\r\n                        <div className = \"form-group col-md-6\">\r\n                            <Link to=\"/\" className=\"btn btn-block btn-danger \">Go Back</Link>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Profile","import Axios from 'axios'\r\nimport  { TASK_FETCH_REQUEST, TASK_FETCH_ERROR, TASK_FETCH_SUCCESS, TASK_LOG_OUT, SET_TASK_ALERT, REMOVE_TASK_ALERT, TASK_ALL_DELETE_SUCCESS } from './ActionType'\r\n\r\nconst BASE_URL = \"https://dhaval-todo-app.herokuapp.com\"\r\n\r\nexport const fetchRequest = () => {\r\n    return {\r\n        type: TASK_FETCH_REQUEST,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const fetchSuccess = (data = null) => {\r\n    return {\r\n        type: TASK_FETCH_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchError = (error = null ) => {\r\n    return {\r\n        type: TASK_FETCH_ERROR,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const logout = (error = null) => {\r\n    return {\r\n        type: TASK_LOG_OUT,\r\n        payload: null\r\n    }\r\n}\r\n\r\nexport const setAlert = (data = null) => {\r\n    return {\r\n        type: SET_TASK_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const removeAlert = (data = null) => {\r\n    return {\r\n        type: REMOVE_TASK_ALERT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const deleteAllSuccess = (data = null) => {\r\n    return {\r\n        type: TASK_ALL_DELETE_SUCCESS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const fetchTaskData = ({username, id}) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest())\r\n        Axios.post(`${BASE_URL}/api/task-list/`, {username, id})\r\n        .then(res =>  {\r\n            const data = res.data\r\n            dispatch(fetchSuccess(data))\r\n        })\r\n        .catch(error => {\r\n            const msg = error.response.data.message\r\n            dispatch(fetchError())\r\n            dispatch(setAlert({type:'danger', message: msg}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    }\r\n}\r\n\r\nexport const createTask = ({username, id, title}) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest())\r\n        Axios.post(`${BASE_URL}/api/task-create/`, {username, id, title})\r\n        .then(res =>  {\r\n           if(res.status === 201) {\r\n               dispatch(fetchTaskData({username, id}))\r\n           } else {\r\n            const msg = res.data.message\r\n            dispatch(fetchError(msg))\r\n           }\r\n        })\r\n        .catch(error => {\r\n            const msg = error.response.data.message\r\n            dispatch(fetchError())\r\n            dispatch(setAlert({type:'danger', message: msg}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    }\r\n}\r\n\r\nexport const editTask = ({username, id, taskid, task}) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest())\r\n        Axios.post(`${BASE_URL}/api/task-update/${taskid}/`, {username, id, ...task})\r\n        .then(res =>  {\r\n           if(res.status === 202) {\r\n               dispatch(fetchTaskData({username, id}))\r\n           } else {\r\n            const msg = res.data.message\r\n            dispatch(fetchError(msg))\r\n           }\r\n        })\r\n        .catch(error => {\r\n            const msg = error.response.data.message\r\n            dispatch(fetchError())\r\n            dispatch(setAlert({type:'danger', message: msg}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteTask = ({username, id, taskid}) => {\r\n    return dispatch => {\r\n        dispatch(fetchRequest())\r\n        Axios.post(`${BASE_URL}/api/task-delete/${taskid}/`, {username, id})\r\n        .then(res =>  {\r\n           if(res.status === 202) {\r\n               dispatch(fetchTaskData({username, id}))\r\n           } else {\r\n            const msg = res.data.message\r\n            dispatch(fetchError(msg))\r\n           }\r\n        })\r\n        .catch(error => {\r\n            const msg = error.response.data.message\r\n            dispatch(fetchError())\r\n            dispatch(setAlert({type:'danger', message: msg}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    }\r\n}\r\n\r\nexport const logoutTask = () => {\r\n    return dispatch => {\r\n        dispatch(logout())\r\n    }\r\n}\r\n\r\nexport const deleteAllTask = ({username, id}) => {\r\n    return dispatch => {\r\n        Axios.post(`${BASE_URL}/api/task-all-delete/`, {username, id})\r\n        .then(res =>  {\r\n            dispatch(deleteAllSuccess())\r\n            dispatch(setAlert({type:'success', message: 'All Task Deleted..'}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n        .catch(error => {\r\n            const msg = error.response.data.message\r\n            dispatch(fetchError())\r\n            dispatch(setAlert({type:'danger', message: msg}))\r\n            setTimeout(() => dispatch(removeAlert()), 3000);\r\n        })\r\n    }\r\n}","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { createTask, deleteTask, editTask, fetchTaskData, logoutTask, deleteAllTask } from '../Redux/Task/TaskAction'\r\nimport { logoutUser } from '../Redux/User/UserAction'\r\nimport Alert from './Alert'\r\n\r\nconst Task = () => {\r\n    const {user, userAlert} = useSelector(state => state.User)\r\n    const {taskAlert, taskList} = useSelector(state => state.Task)\r\n    const [activeItem, setActiveItem] = useState({\r\n        id: null,\r\n        title: '',\r\n        completed: false\r\n      })\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n      dispatch(fetchTaskData({username:user.username, id: user.id}))\r\n    }, [dispatch,user.username,user.id])\r\n    \r\n    const taskDelete = (taskid) => {\r\n      dispatch(deleteTask({username:user.username, id: user.id, taskid}))\r\n    }\r\n    \r\n    const taskEdit = (task) => {\r\n      setActiveItem({id: task.id, title: task.title, completed: task.completed})\r\n    }\r\n\r\n    const logout = () => {\r\n      dispatch(logoutUser(user.username))\r\n      dispatch(logoutTask())\r\n    }\r\n      \r\n    const deleteAll = (event) => {\r\n      event.preventDefault()\r\n      dispatch(deleteAllTask({username: user.username, id: user.id}))\r\n    }\r\n\r\n    const onsubmit = (e) => {\r\n      e.preventDefault()\r\n      if(activeItem.id != null) {\r\n        let task = {title: activeItem.title, completed: activeItem.completed}\r\n        dispatch(editTask({username: user.username, id: user.id, taskid: activeItem.id, task}))\r\n      } else {\r\n        dispatch(createTask({username: user.username, id: user.id, title: activeItem.title}))\r\n      }\r\n      setActiveItem({id: null, title: '', completed: false})\r\n    }\r\n\r\n    const onchange = (e) => {\r\n      setActiveItem({\r\n          ...activeItem,\r\n          title: e.target.value\r\n      })\r\n    }\r\n\r\n    const changeStatus = (task) => { \r\n      let newTask = {title: task.title, completed: !task.completed}\r\n      dispatch(editTask({username: user.username, id: user.id, taskid: task.id, task:newTask}))\r\n    }\r\n\r\n    const clearActiveItem = () => {\r\n      setActiveItem({id: null, title: '', completed: false})\r\n    }\r\n    \r\n    return <Fragment>\r\n      <div className=\"container\">\r\n        {userAlert && <Alert alert={userAlert}/>}\r\n        {taskAlert && <Alert alert={taskAlert}/>}\r\n        <div className=\"row justify-content-end m-5\">\r\n            <Link to=\"/profile\" className = \"h3 custom-icon \"><i className = \" fas fa-user-alt\"></i></Link>\r\n            <p className = \"h3 custom-icon ml-4\" onClick={logout}><i className = \" fas fa-sign-out-alt\"></i></p>\r\n        </div>\r\n        <div id=\"task-container\">\r\n          <div id=\"form-wrapper\">\r\n            <form id=\"form\" onSubmit={onsubmit}>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 col-md-8\">\r\n                  <textarea onChange={e => onchange(e)} value={activeItem.title} className=\"form-control\" type=\"text\" placeholder=\"Enter Task\" maxLength=\"4500\" required></textarea>\r\n                </div>\r\n                <div className=\"col-12 col-md-4 mt-2 mt-md-0 px-md-0\">\r\n                  {!activeItem.id \r\n                    ? (<> \r\n                        <button id=\"submit\" className=\"btn btn-custom w-auto\">Add</button>\r\n                        {taskList.length > 0 && <button id=\"submit\" className=\"btn btn-danger w-auto\" onClick={(e) => deleteAll(e)}>Delete All</button>}\r\n                      </>)\r\n                    : (<>\r\n                        <button id=\"submit\" className=\"btn btn-custom w-auto\">Edit</button>\r\n                        <button className=\"btn btn-danger px-2 ml-2\" onClick={() => clearActiveItem}>Calcel</button>\r\n                      </>)\r\n                  }\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          <div id=\"list-wrapper\">\r\n            {taskList.map((item,index) => <TaskList task = {item} \r\n                                                    key = {index} \r\n                                                    taskDelete = {taskDelete}\r\n                                                    taskEdit = {taskEdit}\r\n                                                    changeStatus = {changeStatus} />)}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n}\r\n\r\nconst TaskList = ({task, taskEdit, taskDelete, changeStatus}) => {\r\n    return <Fragment > \r\n      <div className=\"task-wrapper\">\r\n        <div  className=\"overflow-auto\" onClick={() => changeStatus(task)}>\r\n          {task.completed \r\n            ? <strike>{task.title}</strike>\r\n            :  <span className=\"h5\">{task.title}</span>}\r\n          \r\n        </div>\r\n        <div className=\"flex-wrapper mt-3\">\r\n          <span className=\"\" >{getDate(task.date)}</span>\r\n            <span className=\"btn btn-sm btn-outline-info  ml-4\" onClick= {() => taskEdit(task)}>Edit</span>\r\n            <span className=\"btn btn-sm btn-outline-dark ml-3\" onClick = {() => taskDelete(task.id)}>Delete</span>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n}\r\nconst getDate = (date) => {\r\n  let options = { weekday: 'short', year: 'numeric', month: 'numeric', day: 'numeric' };\r\n  return new Date(date).toLocaleString('en-US', options);\r\n}\r\nexport default Task","import React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({Component, path, ...rest}) => {\r\n    const isLogin = useSelector(state => state.User.isLogin)\r\n    return <Fragment>\r\n        {!isLogin\r\n        ? (<Redirect to=\"/login\" />)\r\n        : <Route {...rest} path={path} render={Component} />\r\n        }\r\n    </Fragment>\r\n}\r\nexport default PrivateRoute","import React, { Fragment, useEffect } from 'react'\r\nimport LogIn from './LogIn';\r\nimport SignUp from './SignUp';\r\nimport Profile from './Profile';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getUserDetail } from '../Redux/User/UserAction'\r\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Task from './Task';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        let user = localStorage.getItem('todo-user')\r\n        if(user !== \"\" && user != null) {\r\n            user = JSON.parse(user)\r\n            dispatch(getUserDetail(user))\r\n        }\r\n    })\r\n    return <Fragment>\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={LogIn} />\r\n                <Route exact path=\"/signup\" component={SignUp} />\r\n                <PrivateRoute path=\"/profile\" component={Profile} />\r\n                <PrivateRoute path=\"/\" component={Task} />\r\n            </Switch>\r\n        </Router>\r\n    </Fragment>\r\n}\r\n \r\nexport default Main;\r\n","import React, { Fragment } from 'react'\nimport {Provider} from 'react-redux'\nimport store from './Redux/store'\nimport './App.css';\nimport Main from './Component/Main';\n\nconst App = () => {\n  return <Fragment>\n    \n    <Provider store={store}>\n      <Main />\n    </Provider>\n    </Fragment>\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}